{
  "security_checks": [
    {
      "id": "CHECK-001",
      "name": "IAM Root Account Usage",
      "description": "Ensure root account is not used for daily operations",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "CRITICAL",
      "nist_mappings": ["AC-2", "AC-6"],
      "service": "iam",
      "check_function": "check_root_account_usage"
    },
    {
      "id": "CHECK-002",
      "name": "MFA on Root Account",
      "description": "Ensure MFA is enabled for root account",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "CRITICAL",
      "nist_mappings": ["IA-2"],
      "service": "iam",
      "check_function": "check_root_mfa"
    },
    {
      "id": "CHECK-003",
      "name": "CloudTrail Enabled",
      "description": "Ensure CloudTrail is enabled in all regions",
      "category": "Logging and Monitoring",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "cloudtrail",
      "check_function": "check_cloudtrail_enabled"
    },
    {
      "id": "CHECK-004",
      "name": "CloudTrail Log File Validation",
      "description": "Ensure CloudTrail log file validation is enabled",
      "category": "Logging and Monitoring",
      "framework": "MITRE ATT&CK",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-9"],
      "service": "cloudtrail",
      "check_function": "check_cloudtrail_validation"
    },
    {
      "id": "CHECK-005",
      "name": "S3 Bucket Public Access",
      "description": "Ensure S3 buckets are not publicly accessible",
      "category": "Data Protection",
      "framework": "OWASP Cloud Security",
      "severity": "HIGH",
      "nist_mappings": ["AC-3", "SC-7"],
      "service": "s3",
      "check_function": "check_s3_public_access"
    },
    {
      "id": "CHECK-006",
      "name": "S3 Bucket Encryption",
      "description": "Ensure S3 buckets have encryption enabled",
      "category": "Data Protection",
      "framework": "AWS Well-Architected",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "s3",
      "check_function": "check_s3_encryption"
    },
    {
      "id": "CHECK-007",
      "name": "EBS Volume Encryption",
      "description": "Ensure EBS volumes are encrypted",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "ec2",
      "check_function": "check_ebs_encryption"
    },
    {
      "id": "CHECK-008",
      "name": "Security Group SSH Access",
      "description": "Ensure no security groups allow unrestricted SSH access",
      "category": "Network Security",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-7", "AC-3"],
      "service": "ec2",
      "check_function": "check_sg_ssh_access"
    },
    {
      "id": "CHECK-009",
      "name": "IAM Password Policy",
      "description": "Ensure IAM password policy meets complexity requirements",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["IA-5"],
      "service": "iam",
      "check_function": "check_password_policy"
    },
    {
      "id": "CHECK-010",
      "name": "IAM Access Key Rotation",
      "description": "Ensure access keys are rotated every 90 days",
      "category": "Identity and Access Management",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["IA-5", "AC-2"],
      "service": "iam",
      "check_function": "check_access_key_rotation"
    },
    {
      "id": "CHECK-011",
      "name": "Unused IAM Credentials",
      "description": "Ensure credentials unused for 90 days are removed",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["AC-2"],
      "service": "iam",
      "check_function": "check_unused_credentials"
    },
    {
      "id": "CHECK-012",
      "name": "EC2 Instance Metadata Service V2",
      "description": "Ensure IMDSv2 is enforced on EC2 instances",
      "category": "Compute Security",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AC-3", "CM-7"],
      "service": "ec2",
      "check_function": "check_imdsv2"
    },
    {
      "id": "CHECK-013",
      "name": "VPC Flow Logs",
      "description": "Ensure VPC flow logs are enabled",
      "category": "Network Security",
      "framework": "MITRE ATT&CK",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "vpc",
      "check_function": "check_vpc_flow_logs"
    },
    {
      "id": "CHECK-014",
      "name": "RDS Encryption",
      "description": "Ensure RDS databases are encrypted at rest",
      "category": "Database Security",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "rds",
      "check_function": "check_rds_encryption"
    },
    {
      "id": "CHECK-015",
      "name": "Config Service Enabled",
      "description": "Ensure AWS Config is enabled in all regions",
      "category": "Configuration Management",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["CM-2", "CM-8"],
      "service": "config",
      "check_function": "check_config_enabled"
    },
    {
      "id": "CHECK-016",
      "name": "CloudWatch Anomaly Detection",
      "description": "Ensure CloudWatch Anomaly Detectors are configured for critical metrics",
      "category": "System and Information Integrity",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["SI-4"],
      "service": "cloudwatch",
      "check_function": "check_cloudwatch_anomaly_detection"
    },
    {
      "id": "CHECK-017",
      "name": "GuardDuty Enabled",
      "description": "Ensure Amazon GuardDuty is enabled in all regions",
      "category": "System and Information Integrity",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SI-4", "SI-5"],
      "service": "guardduty",
      "check_function": "check_guardduty_enabled"
    },
    {
      "id": "CHECK-018",
      "name": "AWS Inspector Assessments",
      "description": "Ensure AWS Inspector is running regular assessments",
      "category": "System and Information Integrity",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["SI-2", "SI-3"],
      "service": "inspector2",
      "check_function": "check_inspector_assessments"
    },
    {
      "id": "CHECK-019",
      "name": "Systems Manager Patch Compliance",
      "description": "Ensure EC2 instances are compliant with patch baselines",
      "category": "System and Information Integrity",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SI-2"],
      "service": "ssm",
      "check_function": "check_ssm_patch_compliance"
    },
    {
      "id": "CHECK-020",
      "name": "Security Hub Enabled",
      "description": "Ensure AWS Security Hub is enabled and aggregating findings",
      "category": "System and Information Integrity",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SI-4", "SI-6"],
      "service": "securityhub",
      "check_function": "check_security_hub_enabled"
    },
    {
      "id": "CHECK-021",
      "name": "CloudWatch Alarms for Security Events",
      "description": "Ensure CloudWatch alarms exist for critical security events",
      "category": "Incident Response",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["IR-4", "IR-5"],
      "service": "cloudwatch",
      "check_function": "check_security_alarms"
    },
    {
      "id": "CHECK-022",
      "name": "SNS Topics for Security Notifications",
      "description": "Ensure SNS topics are configured for security incident notifications",
      "category": "Incident Response",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["IR-6"],
      "service": "sns",
      "check_function": "check_security_sns_topics"
    },
    {
      "id": "CHECK-023",
      "name": "KMS Key Rotation",
      "description": "Ensure KMS CMK rotation is enabled",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-12", "SC-13"],
      "service": "kms",
      "check_function": "check_kms_key_rotation"
    },
    {
      "id": "CHECK-024",
      "name": "Secrets Manager Usage",
      "description": "Ensure sensitive data is stored in AWS Secrets Manager",
      "category": "Data Protection",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["IA-5", "SC-28"],
      "service": "secretsmanager",
      "check_function": "check_secrets_manager_usage"
    },
    {
      "id": "CHECK-025",
      "name": "VPC Endpoint Usage",
      "description": "Ensure VPC endpoints are used for AWS services",
      "category": "Network Security",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-7", "AC-4"],
      "service": "ec2",
      "check_function": "check_vpc_endpoints"
    },
    {
      "id": "CHECK-026",
      "name": "EFS Encryption",
      "description": "Ensure EFS file systems are encrypted at rest",
      "category": "Data Protection",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "efs",
      "check_function": "check_efs_encryption"
    },
    {
      "id": "CHECK-027",
      "name": "DynamoDB Encryption",
      "description": "Ensure DynamoDB tables are encrypted at rest",
      "category": "Data Protection",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "dynamodb",
      "check_function": "check_dynamodb_encryption"
    },
    {
      "id": "CHECK-028",
      "name": "ElastiCache Encryption",
      "description": "Ensure ElastiCache clusters have encryption enabled",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "elasticache",
      "check_function": "check_elasticache_encryption"
    },
    {
      "id": "CHECK-029",
      "name": "Network ACL Rules",
      "description": "Ensure Network ACLs do not allow unrestricted access",
      "category": "Network Security",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-7", "AC-4"],
      "service": "ec2",
      "check_function": "check_network_acl_rules"
    },
    {
      "id": "CHECK-030",
      "name": "AWS WAF Enabled",
      "description": "Ensure AWS WAF is enabled for web applications",
      "category": "Network Security",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-7", "SI-4"],
      "service": "wafv2",
      "check_function": "check_waf_enabled"
    },
    {
      "id": "CHECK-031",
      "name": "CloudFront Security Headers",
      "description": "Ensure CloudFront distributions use security headers",
      "category": "Network Security",
      "framework": "OWASP Cloud Security",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-8"],
      "service": "cloudfront",
      "check_function": "check_cloudfront_security_headers"
    },
    {
      "id": "CHECK-032",
      "name": "IAM Roles for Service Accounts",
      "description": "Ensure EC2 instances use IAM roles instead of hardcoded credentials",
      "category": "Identity and Access Management",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["AC-2", "IA-2"],
      "service": "iam",
      "check_function": "check_iam_roles_for_services"
    },
    {
      "id": "CHECK-033",
      "name": "Cross-Account Access Review",
      "description": "Review and validate cross-account access roles",
      "category": "Identity and Access Management",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AC-2", "AC-3"],
      "service": "iam",
      "check_function": "check_cross_account_access"
    },
    {
      "id": "CHECK-034",
      "name": "AWS Backup Plans",
      "description": "Ensure AWS Backup plans exist for critical resources",
      "category": "Backup and Recovery",
      "framework": "AWS Well-Architected",
      "severity": "HIGH",
      "nist_mappings": ["CP-9", "CP-10"],
      "service": "backup",
      "check_function": "check_backup_plans"
    },
    {
      "id": "CHECK-035",
      "name": "RDS Automated Backups",
      "description": "Ensure RDS instances have automated backups enabled",
      "category": "Backup and Recovery",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["CP-9"],
      "service": "rds",
      "check_function": "check_rds_backups"
    },
    {
      "id": "CHECK-036",
      "name": "CloudWatch Logs Retention",
      "description": "Ensure CloudWatch Logs have appropriate retention periods",
      "category": "Monitoring and Logging",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-4", "AU-11"],
      "service": "logs",
      "check_function": "check_cloudwatch_logs_retention"
    },
    {
      "id": "CHECK-037",
      "name": "API Gateway Logging",
      "description": "Ensure API Gateway has logging enabled",
      "category": "Monitoring and Logging",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "apigateway",
      "check_function": "check_api_gateway_logging"
    },
    {
      "id": "CHECK-038",
      "name": "Lambda Function Logging",
      "description": "Ensure Lambda functions have proper logging configuration",
      "category": "Monitoring and Logging",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "lambda",
      "check_function": "check_lambda_logging"
    },
    {
      "id": "CHECK-039",
      "name": "CloudTrail KMS Encryption",
      "description": "Ensure CloudTrail logs are encrypted using KMS CMKs",
      "category": "Logging and Monitoring",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["AU-9", "SC-28"],
      "service": "cloudtrail",
      "check_function": "check_cloudtrail_kms_encryption"
    },
    {
      "id": "CHECK-040",
      "name": "S3 Bucket Logging",
      "description": "Ensure S3 bucket access logging is enabled on sensitive buckets",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "s3",
      "check_function": "check_s3_bucket_logging"
    }
  ]
}
