{
  "security_checks": [
    {
      "id": "CHECK-001",
      "name": "IAM Root Account Usage",
      "description": "Ensure root account is not used for daily operations",
      "detailed_description": "This check verifies that the AWS root account has not been used for regular operations within the last 30 days and does not have active access keys. The root account should only be used for initial setup and emergency access. Regular use of the root account bypasses IAM policies and makes it difficult to track who performed actions, violating the principle of least privilege and audit requirements.",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "CRITICAL",
      "nist_mappings": ["AC-2", "AC-6"],
      "service": "iam",
      "check_function": "check_root_account_usage"
    },
    {
      "id": "CHECK-002",
      "name": "MFA on Root Account",
      "description": "Ensure MFA is enabled for root account",
      "detailed_description": "This check verifies that Multi-Factor Authentication (MFA) is enabled for the AWS root account. MFA adds an additional layer of protection beyond username and password, requiring a second form of authentication. This is critical for the root account as it has unrestricted access to all AWS services and resources, making it a high-value target for attackers.",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "CRITICAL",
      "nist_mappings": ["IA-2"],
      "service": "iam",
      "check_function": "check_root_mfa"
    },
    {
      "id": "CHECK-003",
      "name": "CloudTrail Enabled",
      "description": "Ensure CloudTrail is enabled in all regions",
      "detailed_description": "This check verifies that AWS CloudTrail is enabled and configured to log API calls across all AWS regions. CloudTrail provides a comprehensive audit trail of all API activity, including who made the request, when it was made, what resources were accessed, and from where. This is essential for security monitoring, compliance auditing, and incident response.",
      "category": "Logging and Monitoring",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "cloudtrail",
      "check_function": "check_cloudtrail_enabled"
    },
    {
      "id": "CHECK-004",
      "name": "CloudTrail Log File Validation",
      "description": "Ensure CloudTrail log file validation is enabled",
      "detailed_description": "This check verifies that CloudTrail log file validation is enabled. Log file validation creates a digital signature for each log file, allowing you to verify that log files have not been modified, deleted, or tampered with. This is critical for maintaining the integrity of audit logs and ensuring they can be trusted for compliance and forensic investigations.",
      "category": "Logging and Monitoring",
      "framework": "MITRE ATT&CK",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-9"],
      "service": "cloudtrail",
      "check_function": "check_cloudtrail_validation"
    },
    {
      "id": "CHECK-005",
      "name": "S3 Bucket Public Access",
      "description": "Ensure S3 buckets are not publicly accessible",
      "detailed_description": "This check verifies that S3 buckets are not configured for public access. Public access to S3 buckets can expose sensitive data to unauthorized users and increase the risk of data breaches. The check examines bucket policies, ACLs, and public access block settings to ensure data is properly protected from unauthorized access.",
      "category": "Data Protection",
      "framework": "OWASP Cloud Security",
      "severity": "HIGH",
      "nist_mappings": ["AC-3", "SC-7"],
      "service": "s3",
      "check_function": "check_s3_public_access"
    },
    {
      "id": "CHECK-006",
      "name": "S3 Bucket Encryption",
      "description": "Ensure S3 buckets have encryption enabled",
      "detailed_description": "This check verifies that S3 buckets have encryption enabled at rest. Encryption protects data from unauthorized access even if the underlying storage is compromised. The check ensures that either AWS-managed keys (SSE-S3) or customer-managed keys (SSE-KMS) are used to encrypt all objects stored in S3 buckets.",
      "category": "Data Protection",
      "framework": "AWS Well-Architected",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "s3",
      "check_function": "check_s3_encryption"
    },
    {
      "id": "CHECK-007",
      "name": "EBS Volume Encryption",
      "description": "Ensure EBS volumes are encrypted",
      "detailed_description": "This check verifies that all EBS volumes are encrypted at rest. EBS encryption provides data protection for EC2 instances by encrypting data stored on attached volumes. This ensures that data remains secure even if the underlying storage infrastructure is compromised or if volumes are detached and moved.",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "ec2",
      "check_function": "check_ebs_encryption"
    },
    {
      "id": "CHECK-008",
      "name": "Security Group SSH Access",
      "description": "Ensure no security groups allow unrestricted SSH access",
      "detailed_description": "This check verifies that security groups do not allow unrestricted SSH access (port 22) from the internet (0.0.0.0/0). Unrestricted SSH access increases the attack surface and makes instances vulnerable to brute force attacks. SSH access should be restricted to specific IP ranges or VPN endpoints.",
      "category": "Network Security",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-7", "AC-3"],
      "service": "ec2",
      "check_function": "check_sg_ssh_access"
    },
    {
      "id": "CHECK-009",
      "name": "IAM Password Policy",
      "description": "Ensure IAM password policy meets complexity requirements",
      "detailed_description": "This check verifies that IAM password policies enforce strong password requirements including minimum length, complexity, and rotation policies. Strong password policies help prevent unauthorized access through password guessing or brute force attacks. The check ensures passwords meet security best practices for length, character types, and expiration.",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["IA-5"],
      "service": "iam",
      "check_function": "check_password_policy"
    },
    {
      "id": "CHECK-010",
      "name": "IAM Access Key Rotation",
      "description": "Ensure access keys are rotated every 90 days",
      "detailed_description": "This check verifies that IAM access keys are rotated regularly (within 90 days). Regular key rotation limits the exposure window if keys are compromised and follows security best practices. The check identifies access keys that are older than 90 days and should be rotated to maintain security.",
      "category": "Identity and Access Management",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["IA-5", "AC-2"],
      "service": "iam",
      "check_function": "check_access_key_rotation"
    },
    {
      "id": "CHECK-011",
      "name": "Unused IAM Credentials",
      "description": "Ensure credentials unused for 90 days are removed",
      "detailed_description": "This check verifies that IAM credentials (access keys and passwords) that have been unused for 90 days are removed. Unused credentials represent a security risk as they may be forgotten but still valid, potentially providing unauthorized access. Regular cleanup of unused credentials reduces the attack surface.",
      "category": "Identity and Access Management",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["AC-2"],
      "service": "iam",
      "check_function": "check_unused_credentials"
    },
    {
      "id": "CHECK-012",
      "name": "EC2 Instance Metadata Service V2",
      "description": "Ensure IMDSv2 is enforced on EC2 instances",
      "detailed_description": "This check verifies that EC2 instances are configured to use IMDSv2 (Instance Metadata Service version 2) instead of IMDSv1. IMDSv2 provides enhanced security by requiring session authentication tokens, protecting against SSRF attacks that could access sensitive instance metadata. This is especially important for instances that may be exposed to untrusted input.",
      "category": "Compute Security",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AC-3", "CM-7"],
      "service": "ec2",
      "check_function": "check_imdsv2"
    },
    {
      "id": "CHECK-013",
      "name": "VPC Flow Logs",
      "description": "Ensure VPC flow logs are enabled",
      "detailed_description": "This check verifies that VPC Flow Logs are enabled to capture information about IP traffic going to and from network interfaces. Flow logs help with troubleshooting connectivity issues, monitoring network traffic patterns, and detecting unusual network activity that might indicate security threats or policy violations.",
      "category": "Network Security",
      "framework": "MITRE ATT&CK",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "vpc",
      "check_function": "check_vpc_flow_logs"
    },
    {
      "id": "CHECK-014",
      "name": "RDS Encryption",
      "description": "Ensure RDS databases are encrypted at rest",
      "detailed_description": "This check verifies that RDS database instances are encrypted at rest. Database encryption protects sensitive data stored in databases from unauthorized access, even if the underlying storage is compromised. This is especially important for databases containing personally identifiable information (PII) or other sensitive data.",
      "category": "Database Security",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "rds",
      "check_function": "check_rds_encryption"
    },
    {
      "id": "CHECK-015",
      "name": "Config Service Enabled",
      "description": "Ensure AWS Config is enabled in all regions",
      "detailed_description": "This check verifies that AWS Config is enabled and configured to track changes to AWS resources across all regions. AWS Config provides continuous monitoring and assessment of resource configurations, helping to ensure compliance with security policies and detect unauthorized changes that could introduce security risks.",
      "category": "Configuration Management",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["CM-2", "CM-8"],
      "service": "config",
      "check_function": "check_config_enabled"
    },
    {
      "id": "CHECK-016",
      "name": "CloudWatch Anomaly Detection",
      "description": "Ensure CloudWatch Anomaly Detectors are configured for critical metrics",
      "detailed_description": "This check verifies that CloudWatch Anomaly Detectors are configured for critical system metrics. Anomaly detection helps identify unusual patterns in system behavior that might indicate security incidents, performance issues, or operational problems. This enables proactive response to potential threats or issues.",
      "category": "System and Information Integrity",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["SI-4"],
      "service": "cloudwatch",
      "check_function": "check_cloudwatch_anomaly_detection"
    },
    {
      "id": "CHECK-017",
      "name": "GuardDuty Enabled",
      "description": "Ensure Amazon GuardDuty is enabled in all regions",
      "detailed_description": "This check verifies that Amazon GuardDuty is enabled and actively monitoring all AWS regions. GuardDuty is a threat detection service that continuously monitors for malicious activity and unauthorized behavior using machine learning, anomaly detection, and integrated threat intelligence. It helps identify potential security threats and provides detailed findings for investigation.",
      "category": "System and Information Integrity",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SI-4", "SI-5"],
      "service": "guardduty",
      "check_function": "check_guardduty_enabled"
    },
    {
      "id": "CHECK-018",
      "name": "AWS Inspector Assessments",
      "description": "Ensure AWS Inspector is running regular assessments",
      "detailed_description": "This check verifies that AWS Inspector is enabled and configured to run regular security assessments. Inspector automatically discovers and scans EC2 instances and container images for software vulnerabilities and unintended network exposure. Regular assessments help identify and remediate security vulnerabilities before they can be exploited.",
      "category": "System and Information Integrity",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["SI-2", "SI-3"],
      "service": "inspector2",
      "check_function": "check_inspector_assessments"
    },
    {
      "id": "CHECK-019",
      "name": "Systems Manager Patch Compliance",
      "description": "Ensure EC2 instances are compliant with patch baselines",
      "detailed_description": "This check verifies that EC2 instances are managed by AWS Systems Manager and compliant with patch baselines. Regular patching is critical for maintaining system security by addressing known vulnerabilities. Systems Manager provides automated patch management and compliance reporting to ensure instances are up-to-date with security patches.",
      "category": "System and Information Integrity",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SI-2"],
      "service": "ssm",
      "check_function": "check_ssm_patch_compliance"
    },
    {
      "id": "CHECK-020",
      "name": "Security Hub Enabled",
      "description": "Ensure AWS Security Hub is enabled and aggregating findings",
      "detailed_description": "This check verifies that AWS Security Hub is enabled and configured to aggregate security findings from multiple AWS services and third-party security tools. Security Hub provides a comprehensive view of security posture and helps prioritize security issues. It integrates findings from GuardDuty, Inspector, Macie, and other security services.",
      "category": "System and Information Integrity",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SI-4", "SI-6"],
      "service": "securityhub",
      "check_function": "check_security_hub_enabled"
    },
    {
      "id": "CHECK-021",
      "name": "CloudWatch Alarms for Security Events",
      "description": "Ensure CloudWatch alarms exist for critical security events",
      "detailed_description": "This check verifies that CloudWatch alarms are configured to monitor critical security events such as failed authentication attempts, unusual API activity, and security service findings. These alarms provide real-time notification of potential security incidents, enabling rapid response to threats and maintaining security awareness.",
      "category": "Incident Response",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["IR-4", "IR-5"],
      "service": "cloudwatch",
      "check_function": "check_security_alarms"
    },
    {
      "id": "CHECK-022",
      "name": "SNS Topics for Security Notifications",
      "description": "Ensure SNS topics are configured for security incident notifications",
      "detailed_description": "This check verifies that SNS topics are configured to receive security notifications from AWS services like GuardDuty, Security Hub, and CloudWatch alarms. Proper notification channels ensure that security teams are promptly alerted to potential threats and can respond quickly to security incidents.",
      "category": "Incident Response",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["IR-6"],
      "service": "sns",
      "check_function": "check_security_sns_topics"
    },
    {
      "id": "CHECK-023",
      "name": "KMS Key Rotation",
      "description": "Ensure KMS CMK rotation is enabled",
      "detailed_description": "This check verifies that Customer Master Keys (CMKs) in AWS KMS have automatic key rotation enabled. Regular key rotation is a security best practice that limits the exposure window if a key is compromised. Automatic rotation ensures keys are rotated annually without manual intervention, maintaining security while reducing operational overhead.",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-12", "SC-13"],
      "service": "kms",
      "check_function": "check_kms_key_rotation"
    },
    {
      "id": "CHECK-024",
      "name": "Secrets Manager Usage",
      "description": "Ensure sensitive data is stored in AWS Secrets Manager",
      "detailed_description": "This check verifies that sensitive information such as database credentials, API keys, and other secrets are stored in AWS Secrets Manager rather than in application code or configuration files. Secrets Manager provides secure storage, automatic rotation, and fine-grained access control for sensitive data, reducing the risk of credential exposure.",
      "category": "Data Protection",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["IA-5", "SC-28"],
      "service": "secretsmanager",
      "check_function": "check_secrets_manager_usage"
    },
    {
      "id": "CHECK-025",
      "name": "VPC Endpoint Usage",
      "description": "Ensure VPC endpoints are used for AWS services",
      "detailed_description": "This check verifies that VPC endpoints are configured for AWS services to enable private communication between VPC resources and AWS services without requiring internet gateway access. VPC endpoints enhance security by keeping traffic within the AWS network and reduce exposure to potential internet-based attacks.",
      "category": "Network Security",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-7", "AC-4"],
      "service": "ec2",
      "check_function": "check_vpc_endpoints"
    },
    {
      "id": "CHECK-026",
      "name": "EFS Encryption",
      "description": "Ensure EFS file systems are encrypted at rest",
      "detailed_description": "This check verifies that Amazon EFS file systems are encrypted at rest. EFS encryption protects data stored in file systems from unauthorized access, even if the underlying storage infrastructure is compromised. This is especially important for file systems containing sensitive data or applications that require high security.",
      "category": "Data Protection",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "efs",
      "check_function": "check_efs_encryption"
    },
    {
      "id": "CHECK-027",
      "name": "DynamoDB Encryption",
      "description": "Ensure DynamoDB tables are encrypted at rest",
      "detailed_description": "This check verifies that DynamoDB tables are encrypted at rest. DynamoDB encryption protects data stored in NoSQL databases from unauthorized access, ensuring that sensitive information remains secure even if the underlying storage is compromised. This is critical for databases containing PII or other sensitive data.",
      "category": "Data Protection",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "dynamodb",
      "check_function": "check_dynamodb_encryption"
    },
    {
      "id": "CHECK-028",
      "name": "ElastiCache Encryption",
      "description": "Ensure ElastiCache clusters have encryption enabled",
      "detailed_description": "This check verifies that ElastiCache clusters are encrypted at rest. ElastiCache encryption protects data stored in Redis and Memcached clusters from unauthorized access, ensuring that cached data remains secure. This is important for applications that cache sensitive information or require high security.",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["SC-28"],
      "service": "elasticache",
      "check_function": "check_elasticache_encryption"
    },
    {
      "id": "CHECK-029",
      "name": "Network ACL Rules",
      "description": "Ensure Network ACLs do not allow unrestricted access",
      "detailed_description": "This check verifies that Network ACLs (NACLs) are properly configured and do not allow unrestricted access to resources. NACLs provide an additional layer of network security by controlling traffic at the subnet level. Proper NACL configuration helps prevent unauthorized access and reduces the attack surface.",
      "category": "Network Security",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-7", "AC-4"],
      "service": "ec2",
      "check_function": "check_network_acl_rules"
    },
    {
      "id": "CHECK-030",
      "name": "AWS WAF Enabled",
      "description": "Ensure AWS WAF is enabled for web applications",
      "detailed_description": "This check verifies that AWS WAF (Web Application Firewall) is enabled and configured to protect web applications from common web exploits. WAF helps protect against attacks such as SQL injection, cross-site scripting, and other OWASP Top 10 vulnerabilities. This is essential for web applications that handle user input or sensitive data.",
      "category": "Network Security",
      "framework": "AWS Well-Architected",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-7", "SI-4"],
      "service": "wafv2",
      "check_function": "check_waf_enabled"
    },
    {
      "id": "CHECK-031",
      "name": "CloudFront Security Headers",
      "description": "Ensure CloudFront distributions use security headers",
      "detailed_description": "This check verifies that CloudFront distributions are configured with security headers to enhance web application security. Security headers such as Content-Security-Policy, X-Frame-Options, and Strict-Transport-Security help protect against various attacks including clickjacking, XSS, and protocol downgrade attacks.",
      "category": "Network Security",
      "framework": "OWASP Cloud Security",
      "severity": "MEDIUM",
      "nist_mappings": ["SC-8"],
      "service": "cloudfront",
      "check_function": "check_cloudfront_security_headers"
    },
    {
      "id": "CHECK-032",
      "name": "IAM Roles for Service Accounts",
      "description": "Ensure EC2 instances use IAM roles instead of hardcoded credentials",
      "detailed_description": "This check verifies that EC2 instances use IAM roles for accessing AWS services instead of hardcoded access keys. IAM roles provide temporary credentials that are automatically rotated, eliminating the security risk of hardcoded credentials that could be exposed or forgotten. This follows the principle of least privilege and reduces credential management overhead.",
      "category": "Identity and Access Management",
      "framework": "AWS Security Best Practices",
      "severity": "HIGH",
      "nist_mappings": ["AC-2", "IA-2"],
      "service": "iam",
      "check_function": "check_iam_roles_for_services"
    },
    {
      "id": "CHECK-033",
      "name": "Cross-Account Access Review",
      "description": "Review and validate cross-account access roles",
      "detailed_description": "This check verifies that cross-account access roles are properly configured and regularly reviewed. Cross-account access should be limited to only what is necessary and should follow the principle of least privilege. Regular review of cross-account permissions helps ensure that access remains appropriate and secure.",
      "category": "Identity and Access Management",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AC-2", "AC-3"],
      "service": "iam",
      "check_function": "check_cross_account_access"
    },
    {
      "id": "CHECK-034",
      "name": "AWS Backup Plans",
      "description": "Ensure AWS Backup plans exist for critical resources",
      "detailed_description": "This check verifies that AWS Backup plans are configured to protect critical resources. Regular backups are essential for disaster recovery and business continuity. AWS Backup provides centralized backup management for multiple AWS services, ensuring that critical data and applications can be restored in the event of data loss or system failure.",
      "category": "Backup and Recovery",
      "framework": "AWS Well-Architected",
      "severity": "HIGH",
      "nist_mappings": ["CP-9", "CP-10"],
      "service": "backup",
      "check_function": "check_backup_plans"
    },
    {
      "id": "CHECK-035",
      "name": "RDS Automated Backups",
      "description": "Ensure RDS instances have automated backups enabled",
      "detailed_description": "This check verifies that RDS instances have automated backups enabled with appropriate retention periods. Automated backups ensure that database data can be recovered in the event of data corruption, accidental deletion, or system failure. This is critical for maintaining data integrity and business continuity.",
      "category": "Backup and Recovery",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["CP-9"],
      "service": "rds",
      "check_function": "check_rds_backups"
    },
    {
      "id": "CHECK-036",
      "name": "CloudWatch Logs Retention",
      "description": "Ensure CloudWatch Logs have appropriate retention periods",
      "detailed_description": "This check verifies that CloudWatch Logs have appropriate retention periods configured. Proper log retention ensures that audit trails are maintained for compliance requirements and security investigations. Retention periods should balance storage costs with regulatory and security needs.",
      "category": "Monitoring and Logging",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-4", "AU-11"],
      "service": "logs",
      "check_function": "check_cloudwatch_logs_retention"
    },
    {
      "id": "CHECK-037",
      "name": "API Gateway Logging",
      "description": "Ensure API Gateway has logging enabled",
      "detailed_description": "This check verifies that API Gateway has logging enabled to capture API requests and responses. API logging is essential for monitoring API usage, debugging issues, and detecting potential security threats or abuse. Logs should include access logs and execution logs for comprehensive monitoring.",
      "category": "Monitoring and Logging",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "apigateway",
      "check_function": "check_api_gateway_logging"
    },
    {
      "id": "CHECK-038",
      "name": "Lambda Function Logging",
      "description": "Ensure Lambda functions have proper logging configuration",
      "detailed_description": "This check verifies that Lambda functions are configured with proper logging to CloudWatch Logs. Lambda logging is essential for monitoring function execution, debugging issues, and detecting potential security incidents. Proper logging configuration ensures that function activity is captured and can be analyzed.",
      "category": "Monitoring and Logging",
      "framework": "AWS Security Best Practices",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "lambda",
      "check_function": "check_lambda_logging"
    },
    {
      "id": "CHECK-039",
      "name": "CloudTrail KMS Encryption",
      "description": "Ensure CloudTrail logs are encrypted using KMS CMKs",
      "detailed_description": "This check verifies that CloudTrail logs are encrypted using Customer Master Keys (CMKs) from AWS KMS. KMS encryption provides additional security for audit logs by ensuring they are protected with customer-controlled encryption keys. This is especially important for logs containing sensitive information or in environments with strict encryption requirements.",
      "category": "Logging and Monitoring",
      "framework": "CIS AWS Benchmark",
      "severity": "HIGH",
      "nist_mappings": ["AU-9", "SC-28"],
      "service": "cloudtrail",
      "check_function": "check_cloudtrail_kms_encryption"
    },
    {
      "id": "CHECK-040",
      "name": "S3 Bucket Logging",
      "description": "Ensure S3 bucket access logging is enabled on sensitive buckets",
      "detailed_description": "This check verifies that S3 bucket access logging is enabled for buckets containing sensitive data. Access logging provides detailed records of all requests made to S3 buckets, including who accessed what data and when. This is essential for security monitoring, compliance auditing, and detecting unauthorized access to sensitive data.",
      "category": "Data Protection",
      "framework": "CIS AWS Benchmark",
      "severity": "MEDIUM",
      "nist_mappings": ["AU-2", "AU-3"],
      "service": "s3",
      "check_function": "check_s3_bucket_logging"
    }
  ]
}
